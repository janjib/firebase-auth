{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","history","useHistory","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","Card","Body","className","Alert","variant","Form","onSubmit","e","preventDefault","current","push","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","handleLogOut","a","onClick","Login","handleSubmit","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67c39a4.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React,{ useContext,useEffect,useState} from 'react'\r\nimport {auth} from '../firebase'\r\n\r\n const AuthContext = React.createContext()\r\n\r\n export const useAuth = () => useContext(AuthContext)\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    const [currentUser,setCurrentUser] = useState()\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const signup = (email,password) => {\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    const login = (email,password) => {\r\n      return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n    \r\n    const resetPassword = email => {\r\n      return auth.sendPasswordResetEmail(email)\r\n    }\r\n    const logout=()=>{\r\n      return auth.signOut()\r\n    }\r\n    \r\n    const updateEmail = email => {\r\n     return currentUser.updateEmail(email)\r\n    }\r\n\r\n    const updatePassword = password => {\r\n     return currentUser.updatePassword(password)\r\n    }\r\n\r\n     useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n      \r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n    \r\n\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n\r\n    }\r\n\r\n    return (\r\n       <AuthContext.Provider value={value}>\r\n           {!loading && children}\r\n       </AuthContext.Provider>\r\n            \r\n        \r\n    )\r\n}\r\n\r\n\r\n","import React,{useRef,useState} from 'react'\r\nimport {Form,Button,Card,Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const [error,setError] = useState('')\r\n    const [loading,setLoading] = useState(false)\r\n\r\nconst {signup} = useAuth()\r\n\r\nconst handleSubmit = e => {\r\n e.preventDefault()\r\n\r\n if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n   return setError('Password does not match')\r\n }\r\n\r\n try{\r\n     setError('')\r\n     setLoading(true)\r\n     signup(emailRef.current.value,passwordRef.current.value)\r\n     history.push('/')\r\n }\r\n catch{\r\n     setError('Failed to create an account')\r\n }\r\n\r\n setLoading(false)\r\n}\r\n\r\n    return (\r\n       <>\r\n       <Card>\r\n       <Card.Body>\r\n           <h2 className=\"mb-4 text-center\">Sign Up</h2>\r\n           \r\n           {error && <Alert variant='danger'>{error}</Alert>}\r\n       <Form onSubmit={handleSubmit}>\r\n           <Form.Group id='email'>\r\n            <Form.Label>\r\n                Email\r\n            </Form.Label>\r\n            <Form.Control type='email' ref={emailRef} required/>\r\n           </Form.Group>\r\n           <Form.Group id='password'>\r\n            <Form.Label>\r\n                Password\r\n            </Form.Label>\r\n            <Form.Control type='password' ref={passwordRef} required/>\r\n           </Form.Group>\r\n           <Form.Group id='password-confirm'>\r\n            <Form.Label>\r\n                Password Confirmation\r\n            </Form.Label>\r\n            <Form.Control type='password' ref={passwordConfirmRef} required/>\r\n           </Form.Group>\r\n           <Button className='w-100' type='submit' disabled = {loading}>Sign Up</Button>\r\n       </Form>\r\n       </Card.Body>\r\n\r\n       </Card>\r\n       <div className='w-100 text-center mt-2'>\r\n           Already have an account ? <Link to='/Login'>Log In</Link>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","\r\nimport React,{useState} from 'react'\r\nimport {Card,Button,Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const history=useHistory()\r\n\r\nconst [error,setError] = useState('')\r\n\r\nconst {currentUser,logout} = useAuth()\r\n\r\n    const handleLogOut = async () => {\r\n       setError('')\r\n\r\n       try{\r\n        await logout()\r\n        history.push('login')\r\n       }catch{\r\n           setError('Failed to logout')\r\n       }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n          <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Profile</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <strong>Email : </strong>{currentUser.email}\r\n                <Link to='/update-profile' className='btn btn-primary w-100 mt-3'>Update Profile</Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Button variant=\"link\" onClick={handleLogOut}>Log Out</Button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React,{useRef,useState} from 'react'\r\nimport {Form,Button,Card,Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    const history=useHistory()\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    \r\n    const [error,setError] = useState('')\r\n    const [loading,setLoading] = useState(false)\r\n\r\nconst {login} = useAuth()\r\n\r\n const handleSubmit = async(e) => {\r\n e.preventDefault()\r\n\r\n \r\n\r\n try{\r\n     setError('')\r\n     setLoading(true)\r\n     await login(emailRef.current.value,passwordRef.current.value)\r\n     history.push('/')\r\n }\r\n catch{\r\n     setError('Failed to login')\r\n }\r\n setLoading(false)\r\n}\r\n\r\n    return (\r\n       <>\r\n       <Card>\r\n       <Card.Body>\r\n           <h2 className=\"mb-4 text-center\">Log In</h2>\r\n           \r\n           {error && <Alert variant='danger'>{error}</Alert>}\r\n       <Form onSubmit={handleSubmit}>\r\n           <Form.Group id='email'>\r\n            <Form.Label>\r\n                Email\r\n            </Form.Label>\r\n            <Form.Control type='email' ref={emailRef} required/>\r\n           </Form.Group>\r\n           <Form.Group id='password'>\r\n            <Form.Label>\r\n                Password\r\n            </Form.Label>\r\n            <Form.Control type='password' ref={passwordRef} required/>\r\n           </Form.Group>\r\n          \r\n           <Button className='w-100' type='submit' disabled = {loading}>Log In</Button>\r\n       </Form>\r\n        <div className='w-100 text-center mt-3'>\r\n            <Link to='/forgot-password'>Forgot password?</Link>\r\n       </div>\r\n       </Card.Body>\r\n\r\n       </Card>\r\n       <div className='w-100 text-center mt-2'>\r\n           Need an account ? <Link to='/signup'>Sign Up</Link>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst PrivateRoute = ({component:Component,...rest}) => {\r\n\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        render={props => {\r\n         return currentUser ? <Component {...props}/> : <Redirect to = '/login' />\r\n        }}\r\n        >\r\n\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React,{useRef,useState} from 'react'\r\nimport {Form,Button,Card,Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    \r\n\r\n    const emailRef = useRef()\r\n    \r\n    \r\n    const [error,setError] = useState('')\r\n    const [loading,setLoading] = useState(false)\r\n    const [message,setMessage] = useState('')\r\n\r\nconst {resetPassword} = useAuth()\r\n\r\nconst handleSubmit = async (e) => {\r\n e.preventDefault()\r\n\r\n \r\n\r\n try{\r\n     setMessage('')\r\n     setError('')\r\n     setLoading(true)\r\n    await resetPassword(emailRef.current.value)\r\n     setMessage('Check your inbox for further instruction')\r\n }\r\n catch{\r\n     setError('Failed to reset password')\r\n }\r\n setLoading(false)\r\n}\r\n\r\n    return (\r\n       <>\r\n       <Card>\r\n       <Card.Body>\r\n           <h2 className=\"mb-4 text-center\">Password Reset</h2>\r\n           \r\n           {error && <Alert variant='danger'>{error}</Alert>}\r\n           {message && <Alert variant='success'>{message}</Alert>}\r\n       <Form onSubmit={handleSubmit}>\r\n           <Form.Group id='email'>\r\n            <Form.Label>\r\n                Email\r\n            </Form.Label>\r\n            <Form.Control type='email' ref={emailRef} required/>\r\n           </Form.Group>\r\n          \r\n          \r\n           <Button className='w-100' type='submit' disabled = {loading}>Reset Password</Button>\r\n       </Form>\r\n        <div className='w-100 text-center mt-3'>\r\n            <Link to='/Login'>Login</Link>\r\n       </div>\r\n       </Card.Body>\r\n\r\n       </Card>\r\n       <div className='w-100 text-center mt-2'>\r\n           Need an account ? <Link to='/signup'>Sign Up</Link>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React,{useRef,useState} from 'react'\r\nimport {Form,Button,Card,Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nconst UpdateProfile = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const [error,setError] = useState('')\r\n    const [loading,setLoading] = useState(false)\r\n\r\nconst {currentUser,updateEmail,updatePassword} = useAuth()\r\n\r\nconst handleSubmit = e => {\r\n e.preventDefault()\r\n setLoading(true)\r\n setError('')\r\n\r\n if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n   return setError('Password does not match')\r\n }\r\n\r\n const promises = []\r\n if(emailRef.current.value !== currentUser.email){\r\n     promises.push(updateEmail(emailRef.current.value))\r\n }\r\n if(passwordRef.current.value){\r\n     promises.push(updatePassword(passwordRef.current.value))\r\n }\r\n\r\n Promise.all(promises).then(()=>{\r\n     history.push('/')\r\n }).catch(()=>{\r\n     return setError('Failed to update account')\r\n }).finally(()=>{\r\n     return setLoading(false)\r\n })\r\n     \r\n \r\n\r\n}\r\n\r\n    return (\r\n       <>\r\n       <Card>\r\n       <Card.Body>\r\n           <h2 className=\"mb-4 text-center\">Update Profile</h2>\r\n           \r\n           {error && <Alert variant='danger'>{error}</Alert>}\r\n       <Form onSubmit={handleSubmit}>\r\n           <Form.Group id='email'>\r\n            <Form.Label>\r\n                Email\r\n            </Form.Label>\r\n            <Form.Control type='email' ref={emailRef}  defaultValue={currentUser.email}/>\r\n           </Form.Group>\r\n           <Form.Group id='password'>\r\n            <Form.Label>\r\n                Password\r\n            </Form.Label>\r\n            <Form.Control type='password' ref={passwordRef}  placeholder='Leave blank to keep the same'/>\r\n           </Form.Group>\r\n           <Form.Group id='password-confirm'>\r\n            <Form.Label>\r\n                Password Confirmation\r\n            </Form.Label>\r\n            <Form.Control type='password' ref={passwordConfirmRef} required placeholder='Leave blank to keep the same'/>\r\n           </Form.Group>\r\n           <Button className='w-100' type='submit' disabled = {loading}>Update</Button>\r\n       </Form>\r\n       </Card.Body>\r\n\r\n       </Card>\r\n       <div className='w-100 text-center mt-2'>\r\n            <Link to='/'>Cancel</Link>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport Login from './Login'\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from \"./UpdateProfile\";\n\n\n\nfunction App() {\n  return (\n     \n    <Container className='d-flex justify-content-center align-items-center'\n    style={{minHeight:'100vh'}}>\n      <div className=\"w-100\" style={{maxWidth:'400px'}}>\n     <Router>\n       <AuthProvider>\n         <Switch>\n           <PrivateRoute exact path='/' component={Dashboard} />\n           <PrivateRoute exact path='/update-profile' component={UpdateProfile} />\n           <Route path='/signup' component={Signup} />\n           <Route path='/login' component={Login} />\n           <Route path='/forgot-password' component={ForgotPassword} />\n         </Switch>\n       </AuthProvider>\n     </Router>\n              \n    </div>\n    </Container>\n    \n    \n    \n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}